{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/Navigation/Sidedrawer/Sidedrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/Navitems/NavItem/Navitem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Modal/Button/Button.module.css","components/Order/Order.module.css","components/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/Navitems/Navitems.module.css","components/Navigation/Sidedrawer/Togglesidedrawer/Togglesidedrawer.module.css","components/UI/Modal/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","containers/Checkout/ContactForm/ContactForm.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Logo/Logo.jsx","components/Navigation/Navitems/NavItem/Navitem.jsx","components/Navigation/Navitems/Navitems.jsx","components/Navigation/Sidedrawer/Togglesidedrawer/Togglesidedrawer.jsx","components/Navigation/Toolbar/Toolbar.jsx","components/UI/Modal/Backdrop/Backdrop.jsx","components/Navigation/Sidedrawer/Sidedrawer.jsx","components/Layout/Layout.jsx","hoc/axiosInstance.jsx","components/Burger/BurgerIngredients/BurgerIngredients.jsx","components/Burger/Burger.jsx","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.jsx","components/UI/Modal/Modal.jsx","components/UI/Modal/Button/Button.jsx","components/Burger/OrderSummary/OrderSummary.jsx","components/UI/Spinner/Spinner.jsx","containers/BurgerBuilder/BurgerBuilder.jsx","hoc/ErrorHandler/ErrorHandler.jsx","components/UI/Input/Input.jsx","containers/Checkout/ContactForm/ContactForm.jsx","components/Order/CheckoutSummary/CheckoutSummary.jsx","containers/Checkout/Checkout.jsx","components/Order/Order.jsx","containers/Orders/Orders.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","logo","props","className","classes","Logo","src","burgerLogo","alt","navItem","NavItem","to","link","activeClassName","active","exact","children","navItems","NavItems","Navitem","toggleSidedrawer","onClick","clicked","DrawerToggle","toolbar","Toolbar","toggle","DesktopOnly","Navitems","backDrop","show","Backdrop","sideDrawer","totalClasses","SideDrawer","Close","open","Open","Fragment","closed","join","Layout","state","sideDrawerVisible","sideDrawerCloseHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","axiosInstance","axios","create","baseURL","BurgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","desiredIngredients","Object","keys","ingredients","map","igType","Array","_","index","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","reduceingre","disabled","More","addingre","controls","buildControls","BuildControls","price","ctrl","ingredientAddition","ingredientReduction","OrderButton","purchasable","ordered","modal","modalClosed","Modal","style","transform","opacity","button","Button","btnType","orderSummary","summary","textTransform","ingredientPrices","totalPrice","cancelPurchase","continuePurchase","spinner","Loader","salad","cheese","meat","bacon","ErrorHandler","ChildComponent","errorCloseHandler","error","reqInstance","interceptors","request","resInstance","response","use","req","eject","message","loading","orderHandler","cancelOrderHandler","continueOrderHandler","queryParams","i","push","query","history","pathname","search","isPurchasable","totalQuantity","sum","addIngredient","newCount","newIngredients","newPrice","reduceIngredient","get","then","res","data","catch","err","disableInfo","ig","Spinner","OrderSummary","input","inputElement","validationError","cssClasses","InputElement","invalid","validationNeeded","touched","Invalid","ValidationError","valueType","elementType","elementConfig","value","onChange","changed","options","item","Input","ContactForm","formData","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","validatePattern","deliveryMethod","isFormValid","orderSuccessHandler","event","preventDefault","field","order","orderData","post","inputChangeHandler","inputField","contactFormData","contactFormFieldData","target","checkValidity","test","String","toLowerCase","validationRules","isValid","trim","validateEmail","fieldArray","id","config","form","onSubmit","checkoutSummary","CheckoutSummary","width","margin","cancelCheckout","continueCheckout","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","URLSearchParams","location","entries","Number","path","match","url","render","displayOrders","orderInfo","reverse","Order","address","OrderScreen","totalOrders","Orders","orders","orderArr","getEachOrderData","orderIngredients","App","component","BurgerBuilder","Boolean","window","hostname","app","basename","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.2f8d3ab4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__z9yUs\",\"BreadTop\":\"BurgerIngredients_BreadTop__1r9Q4\",\"Seeds1\":\"BurgerIngredients_Seeds1__2zlB2\",\"Seeds2\":\"BurgerIngredients_Seeds2__2cm30\",\"Meat\":\"BurgerIngredients_Meat__2Feuy\",\"Cheese\":\"BurgerIngredients_Cheese__2P0BB\",\"Salad\":\"BurgerIngredients_Salad__1f5Oo\",\"Bacon\":\"BurgerIngredients_Bacon__39mRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"Sidedrawer_SideDrawer__2RsS5\",\"Open\":\"Sidedrawer_Open__3X3Bo\",\"Close\":\"Sidedrawer_Close__UkmnM\",\"Logo\":\"Sidedrawer_Logo__1-DiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__yVZZn\",\"Label\":\"Input_Label__1Yfsf\",\"InputElement\":\"Input_InputElement__1IKVg\",\"Invalid\":\"Input_Invalid__3KdIb\",\"ValidationError\":\"Input_ValidationError__2UigI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1BHOa\",\"Label\":\"BuildControl_Label__1EDho\",\"Less\":\"BuildControl_Less__1kR4D\",\"More\":\"BuildControl_More__n6t4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2MZXm\",\"Logo\":\"Toolbar_Logo__13Hgw\",\"DesktopOnly\":\"Toolbar_DesktopOnly__22vEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"Navitem_NavItem__XidLt\",\"active\":\"Navitem_active__8sk0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2PTIA\",\"OrderButton\":\"BuildControls_OrderButton__3FTbP\",\"enable\":\"BuildControls_enable__3ZcKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2AyIy\",\"Success\":\"Button_Success__2_TI_\",\"Danger\":\"Button_Danger__1PgtS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1zKRW\",\"OrderScreen\":\"Order_OrderScreen__3Xp_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2Mw7r\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2eiIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"Navitems_NavItems__r6-Vm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"Togglesidedrawer_DrawerToggle__nzmNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__t6NbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__AmNcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1hhhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__6KAVH\",\"load6\":\"Spinner_load6__3v123\",\"round\":\"Spinner_round__a-Goo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__BQRqy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__12sGQ\"};","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"Burger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navitem.module.css';\r\n\r\nconst navItem = (props) => (\r\n    <li className={classes.NavItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            activeClassName={classes.active}\r\n            exact={props.exact}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navItem;","import React from 'react';\r\nimport classes from './Navitems.module.css';\r\nimport Navitem from './NavItem/Navitem';\r\n\r\nconst navItems = (props) => (\r\n    <ul className={classes.NavItems}>\r\n        <Navitem link=\"/\" exact>Burger Builder</Navitem>\r\n        <Navitem link=\"/orders\">Orders</Navitem>\r\n    </ul>\r\n);\r\n\r\nexport default navItems;","import React from 'react';\r\nimport classes from './Togglesidedrawer.module.css';\r\n\r\nconst toggleSidedrawer = (props) => (\r\n    <div onClick={props.clicked}\r\n        className={classes.DrawerToggle} >\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default toggleSidedrawer;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport Navitems from '../Navitems/Navitems';\r\nimport ToggleSidedrawer from '../Sidedrawer/Togglesidedrawer/Togglesidedrawer';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <ToggleSidedrawer clicked={props.toggle} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <Navitems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backDrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backDrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport Navitems from '../Navitems/Navitems';\r\nimport classes from './Sidedrawer.module.css';\r\nimport Backdrop from '../../UI/Modal/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n    let totalClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open)\r\n        totalClasses = [classes.SideDrawer, classes.Open];\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={totalClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <Navitems />\r\n                </nav>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/Sidedrawer/Sidedrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        sideDrawerVisible: false\r\n    }\r\n\r\n    sideDrawerCloseHandler = () => {\r\n        this.setState({ sideDrawerVisible: false });\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                sideDrawerVisible: !prevState.sideDrawerVisible\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Toolbar toggle={this.sideDrawerToggleHandler} />\r\n                <SideDrawer open={this.state.sideDrawerVisible} closed={this.sideDrawerCloseHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Layout;","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://react-burger-builder-4295a.firebaseio.com/'\r\n});\r\n\r\nexport default axiosInstance;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredients.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\n\r\nconst burger = (props) => {\r\n    let desiredIngredients = Object.keys(props.ingredients)\r\n        .map(igType => [...Array(props.ingredients[igType])]\r\n            .map((_, index) => <BurgerIngredients key={igType + index} type={igType} />))\r\n        .reduce((arr, el) => arr.concat(el));\r\n\r\n    if (desiredIngredients.length === 0) {\r\n        desiredIngredients = <p>Start Adding Delicious Ingredients</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type=\"bread-top\" />\r\n            {desiredIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.reduceingre} disabled={props.disabled}>-</button>\r\n        <button className={classes.More} onClick={props.addingre}>+</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' }\r\n];\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p><strong>Current Price: {props.price} Rs.</strong></p>\r\n        {controls.map(ctrl =>\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                addingre={() => props.ingredientAddition(ctrl.type)}\r\n                reduceingre={() => props.ingredientReduction(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />)}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>\r\n            ORDER NOW\r\n            </button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from './Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n    <React.Fragment>\r\n        <Backdrop show={props.show} clicked={props.modalClosed} />\r\n        <div\r\n            className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        disabled={props.disabled}\r\n        onClick={props.clicked}>\r\n        {props.children}\r\n    </button >\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../../UI/Modal/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const summary = Object.keys(props.ingredients)\r\n        .map(igType =>\r\n            <li key={igType}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igType}</span>\r\n                ({props.ingredients[igType]})\r\n                =  {props.ingredientPrices[igType] * props.ingredients[igType]} Rs.\r\n            </li>);\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Your Order Summary</h3>\r\n            <p>Have a Delicious feast!!!</p>\r\n            <ul>\r\n                <li>Bread-Top(1) = 25 Rs.</li>\r\n                {summary}\r\n                <li>Bread-Bottom(1) = 25 Rs.</li>\r\n            </ul>\r\n            <p><strong>Total Price : {props.totalPrice} Rs.</strong></p>\r\n            <p>Checkout your Burger?</p>\r\n            <Button btnType='Danger' clicked={props.cancelPurchase}>CANCEL</Button>\r\n            <Button btnType='Success' clicked={props.continuePurchase}>ORDER</Button>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport axiosInstance from '../../hoc/axiosInstance';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport ErrorHandler from '../../hoc/ErrorHandler/ErrorHandler';\r\n\r\nconst ingredientPrices = {\r\n    salad: 25,\r\n    cheese: 50,\r\n    meat: 100,\r\n    bacon: 30\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 50,\r\n        purchasable: false,\r\n        ordered: false,\r\n        loading: false,\r\n        error: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        axiosInstance.get('/ingredients.json').then(res => {\r\n            this.setState({ ingredients: res.data })\r\n        }).catch(err => {\r\n            this.setState({ error: true })\r\n        });\r\n    }\r\n    orderHandler = () => {\r\n        this.setState({ ordered: true });\r\n    }\r\n\r\n    cancelOrderHandler = () => {\r\n        this.setState({ ordered: false });\r\n    }\r\n\r\n    continueOrderHandler = () => {\r\n        const queryParams = [];\r\n        for (let i in this.state.ingredients) {\r\n            queryParams.push(i + '=' + this.state.ingredients[i]);\r\n        }\r\n        queryParams.push(\"price=\" + this.state.totalPrice);\r\n        const query = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + query\r\n        });\r\n    }\r\n\r\n    isPurchasable = (ingredients) => {\r\n        const totalQuantity = Object.keys(ingredients)\r\n            .map(igType => ingredients[igType])\r\n            .reduce((sum, el) => sum + el);\r\n        this.setState({ purchasable: totalQuantity > 0 });\r\n    }\r\n\r\n    addIngredient = (type) => {\r\n        const newCount = this.state.ingredients[type] + 1;\r\n        const newIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        newIngredients[type] = newCount;\r\n        const newPrice = this.state.totalPrice + ingredientPrices[type];\r\n        this.setState({ ingredients: newIngredients, totalPrice: newPrice });\r\n        this.isPurchasable(newIngredients);\r\n    }\r\n\r\n    reduceIngredient = (type) => {\r\n        if (this.state.ingredients[type] > 0) {\r\n            const newCount = this.state.ingredients[type] - 1;\r\n            const newIngredients = {\r\n                ...this.state.ingredients\r\n            };\r\n            newIngredients[type] = newCount;\r\n            const newPrice = this.state.totalPrice - ingredientPrices[type];\r\n            this.setState({ ingredients: newIngredients, totalPrice: newPrice });\r\n            this.isPurchasable(newIngredients);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const disableInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let ig in disableInfo) {\r\n            disableInfo[ig] = disableInfo[ig] <= 0;\r\n        }\r\n        let summary = null;\r\n        let burger = this.state.error ? <p>Ingredients can't be fetched.</p> : <Spinner />;\r\n        if (this.state.ingredients) {\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients={this.state.ingredients} />\r\n                    <BuildControls\r\n                        ingredientAddition={this.addIngredient}\r\n                        ingredientReduction={this.reduceIngredient}\r\n                        disabled={disableInfo}\r\n                        price={this.state.totalPrice}\r\n                        purchasable={this.state.purchasable}\r\n                        ordered={this.orderHandler} />\r\n                </React.Fragment>\r\n            );\r\n            summary = <OrderSummary\r\n                ingredients={this.state.ingredients}\r\n                ingredientPrices={ingredientPrices}\r\n                totalPrice={this.state.totalPrice}\r\n                cancelPurchase={this.cancelOrderHandler}\r\n                continuePurchase={this.continueOrderHandler} />;\r\n        }\r\n        if (this.state.loading)\r\n            summary = <Spinner />;\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.ordered} modalClosed={this.cancelOrderHandler}>\r\n                    {summary}\r\n                </Modal>\r\n                {burger}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorHandler(BurgerBuilder, axiosInstance);","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst errorHandler = (ChildComponent, axiosInstance) => {\r\n    return class extends Component {\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                error: null\r\n            }\r\n            this.reqInstance = axiosInstance.interceptors.request;\r\n            this.resInstance = axiosInstance.interceptors.response;\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.reqInstance.use(req => {\r\n                this.setState({ error: null })\r\n                return req;\r\n            })\r\n            this.resInstance.use(null, error => {\r\n                this.setState({ error: error })\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axiosInstance.interceptors.request.eject(this.reqInstance);\r\n            axiosInstance.interceptors.response.eject(this.resInstance);\r\n        }\r\n\r\n        errorCloseHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <React.Fragment>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorCloseHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <ChildComponent {...this.props} />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default errorHandler;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    let validationError = null;\r\n\r\n    const cssClasses = [classes.InputElement];\r\n    if (props.invalid && props.validationNeeded && props.touched) {\r\n        cssClasses.push(classes.Invalid);\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.valueType}!</p>;\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={cssClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={cssClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={cssClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(item => (\r\n                        <option key={item.value} value={item.value}>\r\n                            {item.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={cssClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport classes from './ContactForm.module.css';\r\nimport Button from '../../../components/UI/Modal/Button/Button';\r\nimport axiosInstance from '../../../hoc/axiosInstance';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        formData: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                valueType: \"Name\",\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                valueType: \"Street Address\",\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                valueType: \"ZIP Code\",\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Country'\r\n                },\r\n                valueType: \"Country Name\",\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your mail id'\r\n                },\r\n                valueType: \"Email Address\",\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    validatePattern: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'homeDelivery', label: 'Home Delivery' },\r\n                        { value: 'takeAway', label: 'TakeAway' },\r\n                    ]\r\n                },\r\n                value: 'homeDelivery',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        isFormValid: false,\r\n        loading: false,\r\n    }\r\n\r\n    validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    checkValidity(value, validationRules) {\r\n        let isValid = true;\r\n        if (validationRules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (validationRules.minLength) {\r\n            isValid = value.trim().length >= validationRules.minLength && isValid;\r\n        }\r\n\r\n        if (validationRules.maxLength) {\r\n            isValid = value.trim().length <= validationRules.maxLength && isValid;\r\n        }\r\n\r\n        if(validationRules.validatePattern){\r\n            isValid = this.validateEmail(value.trim()) && isValid;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    orderSuccessHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        let formData = {};\r\n        for (let field in this.state.formData) {\r\n            formData[field] = this.state.formData[field].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.totalPrice,\r\n            orderData: formData\r\n        };\r\n        axiosInstance.post(\"https://react-burger-builder-4295a.firebaseio.com/orders.json\", order).then(res => {\r\n            this.setState({ loading: false })\r\n            this.props.history.push('/');\r\n        });\r\n    }\r\n\r\n    inputChangeHandler = (event, inputField) => {\r\n        const contactFormData = {\r\n            ...this.state.formData\r\n        };\r\n        const contactFormFieldData = {\r\n            ...contactFormData[inputField]\r\n        };\r\n        contactFormFieldData.value = event.target.value;\r\n        contactFormFieldData.valid = this.checkValidity(contactFormFieldData.value, contactFormFieldData.validation);\r\n        contactFormFieldData.touched = true;\r\n        contactFormData[inputField] = contactFormFieldData;\r\n\r\n        let isFormValid = true;\r\n        for (let field in contactFormData) {\r\n            isFormValid = contactFormData[field].valid && isFormValid;\r\n        }\r\n        this.setState({ formData: contactFormData, isFormValid: isFormValid });\r\n    }\r\n\r\n    render() {\r\n        let fieldArray = [];\r\n        for (var field in this.state.formData) {\r\n            fieldArray.push({\r\n                id: field,\r\n                config: this.state.formData[field]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderSuccessHandler}>\r\n                {fieldArray.map(field => (\r\n                    <Input\r\n                        key={field.id}\r\n                        elementType={field.config.elementType}\r\n                        elementConfig={field.config.elementConfig}\r\n                        value={field.config.value}\r\n                        invalid={!field.config.valid}\r\n                        validationNeeded={field.config.validation}\r\n                        touched={field.config.touched}\r\n                        valueType={field.config.valueType}\r\n                        changed={(event) => this.inputChangeHandler(event, field.id)} />\r\n                ))}\r\n                <Button btnType='Success' disabled={!this.state.isFormValid} clicked={this.orderSuccessHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.state.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactForm}>\r\n                <h3>Enter Your Contact Details</h3>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Modal/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => (\r\n    <div className={classes.CheckoutSummary}>\r\n        <h1>Enjoy Your Burger!!!</h1>\r\n        <Burger style={{ width: '100%', margin: 'auto' }} ingredients={props.ingredients} />\r\n        <Button\r\n            btnType='Danger'\r\n            clicked={props.cancelCheckout}>Cancel</Button>\r\n        <Button\r\n            btnType='Success'\r\n            clicked={props.continueCheckout}>Continue</Button>\r\n    </div>\r\n);\r\n\r\nexport default checkoutSummary;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients: {\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0,\r\n            salad: 0\r\n        },\r\n        totalPrice: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        const queryParams = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price;\r\n        for (let i of queryParams.entries()) {\r\n            if (i[0] === 'price')\r\n                price = Number(i[1]);\r\n            else\r\n                ingredients[i[0]] = Number(i[1]);\r\n        }\r\n        this.setState({ ingredients: ingredients, totalPrice: price });\r\n    }\r\n\r\n    checkoutCancelHandler = () => {\r\n        this.props.history.goBack('/');\r\n    }\r\n\r\n    checkoutContinueHandler = () => {\r\n        this.props.history.replace('/checkout/contactForm');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary\r\n                    ingredients={this.state.ingredients}\r\n                    cancelCheckout={this.checkoutCancelHandler}\r\n                    continueCheckout={this.checkoutContinueHandler} />\r\n                <Route\r\n                    path={this.props.match.url + '/contactForm'}\r\n                    render={(props) => (\r\n                        <ContactForm\r\n                            ingredients={this.state.ingredients}\r\n                            totalPrice={this.state.totalPrice}\r\n                            {...props} />\r\n                    )} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    let displayOrders = props.orderInfo.reverse().map((order, index) => (\r\n        <div className={classes.Order} key={index}>\r\n            <p>Name: {order.name}</p>\r\n            <p>Email-Id: {order.email}</p>\r\n            <p>Delivery Address: {order.address}</p>\r\n            <p>Delivery Method: {order.deliveryMethod}</p>\r\n            <p>Order Summary: Burger with {order.ingredients}</p>\r\n            <p>Price: Rs. {order.price}</p>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div className={classes.OrderScreen}>\r\n            <p>Review Your Orders!!!</p>\r\n            <p>Total Orders: {props.totalOrders}</p>\r\n            {displayOrders}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axiosInstance from '../../hoc/axiosInstance';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: null,\r\n        totalOrders: 0,\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        axiosInstance.get('/orders.json').then(response => {\r\n            let orderArr = [];\r\n            for (var key in response.data) {\r\n                const order = response.data[key];\r\n                const orderData = this.getEachOrderData(order);\r\n                orderArr.push(orderData);\r\n            }\r\n            this.setState({ orders: orderArr, totalOrders: orderArr.length, loading: false })\r\n        });\r\n    }\r\n\r\n    getEachOrderData(order) {\r\n        const ingredients = order['ingredients'];\r\n        const orderData = order['orderData'];\r\n        const price = order.price;\r\n        let orderIngredients = \"Ingredients: \";\r\n        for (var ingredient in ingredients) {\r\n            orderIngredients += ingredient + '(' + ingredients[ingredient] + ') ';\r\n        }\r\n        const email = orderData?.email;\r\n        const name = orderData?.name;\r\n        const address = orderData?.street + \", \" + orderData?.zipCode + \", \" + orderData?.country;\r\n        const deliveryMethod = orderData?.deliveryMethod === \"takeAway\" ? \"TakeAway\" : \"Home Delivery\";\r\n        const eachOrderData = {\r\n            name: name,\r\n            email: email,\r\n            address: address,\r\n            deliveryMethod: deliveryMethod,\r\n            ingredients: orderIngredients,\r\n            price: price\r\n        }\r\n        return eachOrderData;\r\n    }\r\n\r\n    render() {\r\n        let order = null;\r\n        if (this.state.loading) {\r\n            order = <Spinner />;\r\n        }\r\n        else {\r\n            order = <Order orderInfo={this.state.orders} totalOrders={this.state.totalOrders} />\r\n        }\r\n        return (\r\n            <div >\r\n                {order}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Orders;","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter basename=\"/BurgerBuilder/\">\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}